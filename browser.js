(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";function _toConsumableArray(r){if(Array.isArray(r)){for(var e=0,n=Array(r.length);e<r.length;e++)n[e]=r[e];return n}return Array.from(r)}function _classCallCheck(r,e){if(!(r instanceof e))throw new TypeError("Cannot call a class as a function")}function combine(){function r(r){return function(e){var n=!0,t=!1,o=void 0;try{for(var u,i=e[Symbol.iterator]();!(n=(u=i.next()).done);n=!0){var s=u.value;a.set(s,r)}}catch(l){t=!0,o=l}finally{try{!n&&i["return"]&&i["return"]()}finally{if(t)throw o}}return e}}function e(e){return e.getBuilders().then(r(e))}for(var n=arguments.length,t=Array(n),o=0;n>o;o++)t[o]=arguments[o];var a=new Map;return{getBuilders:function(){return Promise.all(t.map(e)).then(function(r){var e;return(e=[]).concat.apply(e,_toConsumableArray(r))})},getBuilds:function(e){var n=a.get(e);return n.getBuilds(e).then(r(n))}}}var _createClass=function(){function r(r,e){for(var n=0;n<e.length;n++){var t=e[n];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(r,t.key,t)}}return function(e,n,t){return n&&r(e.prototype,n),t&&r(e,t),e}}();Object.defineProperty(exports,"__esModule",{value:!0}),exports.combine=combine;var PENDING=exports.PENDING="pending",SUCCESS=exports.SUCCESS="success",WARNING=exports.WARNING="warning",FAILURE=exports.FAILURE="failure",ERRORED=exports.ERRORED="errored",ABORTED=exports.ABORTED="aborted",UNKNOWN=exports.UNKNOWN="unknown",STATES=exports.STATES={PENDING:PENDING,SUCCESS:SUCCESS,WARNING:WARNING,FAILURE:FAILURE,ERRORED:ERRORED,ABORTED:ABORTED,UNKNOWN:UNKNOWN},Adapter=exports.Adapter=function(){function r(e){_classCallCheck(this,r)}return _createClass(r,[{key:"getInfo",value:function(){return Promise.resolve({})}},{key:"getBuilders",value:function(){return Promise.resolve([])}},{key:"getBuilds",value:function(r){return Promise.resolve([])}}]),r}();

},{}],2:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{"default":e}}function Buildbot(e){function t(){return(0,_fetch2["default"])(e+"/json",i).then(function(e){return e.json()}).then(function(t){return{name:t.project.title,url:e+"/json",html_url:e,builders_url:e+"/json/builders{/name}",builders:Object.keys(t.builders)}})}function r(){return t().then(function(e){var t=_urlTemplate2["default"].parse(e.builders_url),r=t.expand({});return(0,_fetch2["default"])(r,i)}).then(function(e){return e.json()}).then(function(t){return Object.keys(t).map(function(r){var u=r,n=t[r];return{name:u,url:e+"/json/builders/"+u,html_url:e+"/builders/"+u,builds_url:e+"/json/builders/"+u+"/builds{/number}{?select*}",data:n}})})}function u(t){var r=[-1].concat(t.data.cachedBuilds),u=_urlTemplate2["default"].parse(t.builds_url),n=u.expand({select:r});return(0,_fetch2["default"])(n,i).then(function(e){return e.json()}).then(function(r){var u={};return Object.keys(r).map(function(e){return r[e]}).filter(function(e){var t=e.number;return u[t]?!1:u[t]=!0}).map(function(r){var u=r.times[0]&&!r.times[1];return{name:t.name,number:r.number,url:e+"/json/builders/"+t.name+"/builds/"+r.number,html_url:e+"/builders/"+t.name+"/builds/"+r.number,state:u?_adapter.PENDING:BUILDBOT_STATE_LIST[r.results||0]||_adapter.UNKNOWN,start:new Date(1e3*r.times[0]),end:u?null:new Date(1e3*r.times[1]),data:r}})})}var n=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],a=n.headers,l=Object.assign({Accept:BUILDBOT_MEDIA_TYPE},a),i={headers:l};return{getInfo:t,getBuilders:r,getBuilds:u}}Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]=Buildbot;var _fetch=require("./fetch"),_fetch2=_interopRequireDefault(_fetch),_urlTemplate=require("url-template"),_urlTemplate2=_interopRequireDefault(_urlTemplate),_adapter=require("./adapter"),BUILDBOT_MEDIA_TYPE="application/json",BUILDBOT_STATE_LIST=[_adapter.SUCCESS,_adapter.WARNING,_adapter.FAILURE,_adapter.UNKNOWN,_adapter.ERRORED,_adapter.ERRORED];

},{"./adapter":1,"./fetch":3,"url-template":"url-template"}],3:[function(require,module,exports){
"use strict";if("undefined"==typeof fetch)var fetch=require("node-fetch");exports=fetch;

},{"node-fetch":7}],4:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(exports,"__esModule",{value:!0}),exports.Travis=exports.Jenkins=exports.Buildbot=exports.urltemplate=exports.combine=void 0;var _adapter=require("./adapter"),_buildbot=require("./buildbot"),_buildbot2=_interopRequireDefault(_buildbot),_jenkins=require("./jenkins"),_jenkins2=_interopRequireDefault(_jenkins),_travis=require("./travis"),_travis2=_interopRequireDefault(_travis),_urlTemplate=require("url-template"),_urlTemplate2=_interopRequireDefault(_urlTemplate);exports.combine=_adapter.combine,exports.urltemplate=_urlTemplate2["default"],exports.Buildbot=_buildbot2["default"],exports.Jenkins=_jenkins2["default"],exports.Travis=_travis2["default"];

},{"./adapter":1,"./buildbot":2,"./jenkins":5,"./travis":6,"url-template":"url-template"}],5:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{"default":e}}function Jenkins(e){function n(){return(0,_fetch2["default"])(e+"/api/json",l).then(function(e){return e.json()}).then(function(n){return{name:n.nodeName,url:e+"/api/json",html_url:e,builders_url:e+"/job{/name}/api/json{?tree}",builders:n.jobs.map(function(e){return e.name}),data:n}})}function t(){return n().then(function(n){var t=e+"/api/json?tree=jobs[name,builds[number]{,10}],views[name,jobs[name]]";return(0,_fetch2["default"])(t,l)}).then(function(e){return e.json()}).then(function(n){return n.jobs.map(function(t){var r=t.name;return{name:r,url:e+"/job/"+r+"/api/json",html_url:e+"/job/"+r,builds_url:e+"/job/"+r+"/{number}/api/json{?tree}",builds:t.builds.map(function(e){return e.number}),data:n}})})}function r(n){return Promise.all(n.builds.map(function(e){var t=_urlTemplate2["default"].parse(n.builds_url),r=t.expand({number:e});return(0,_fetch2["default"])(r,l).then(function(e){return e.json()})})).then(function(t){return t.map(function(t){var r=t.building;return{name:n.name,number:t.number,url:e+"/job/"+n.name+"/"+t.number+"/api/json",html_url:e+"/job/"+n.name+"/"+t.number,state:r?PENDING:JENKINS_STATE_MAP[t.result]||_adapter.UNKNOWN,start:new Date(t.timestamp),end:r?null:new Date(t.timestamp+t.duration),data:t}})})}var u=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],a=u.headers,i=Object.assign({Accept:JENKINS_MEDIA_TYPE},a),l={headers:i};return l.headers=Object.assign({},l.headers,i),{getInfo:n,getBuilders:t,getBuilds:r}}Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]=Jenkins;var _fetch=require("./fetch"),_fetch2=_interopRequireDefault(_fetch),_urlTemplate=require("url-template"),_urlTemplate2=_interopRequireDefault(_urlTemplate),_adapter=require("./adapter"),JENKINS_MEDIA_TYPE="application/json",JENKINS_STATE_MAP={SUCCESS:_adapter.SUCCESS,UNSTABLE:_adapter.WARNING,FAILURE:_adapter.FAILURE};

},{"./adapter":1,"./fetch":3,"url-template":"url-template"}],6:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{"default":e}}function getHtmlUrl(e){var t=TRAVIS_HTML_URL.exec(e);return t[1]+(t[3]||t[5])+(t[6]||"")}function Travis(e){function t(){return(0,_fetch2["default"])(e+"/auth/github",{method:"post",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({github_token:l})}).then(function(e){return e.json()}).then(function(e){var t=e.access_token;return d.headers.Authorization="token "+t,t})}function r(){return t().then(function(t){return(0,_fetch2["default"])(e+"/repos/"+s,d)}).then(function(e){return e.json()}).then(function(t){return{name:"Travis CI - "+s+" ("+e+")",url:e+"/repos/"+s,html_url:p+"/"+s,builders_url:e+"/repos/"+s+"{/name}{?ids}",builders:t.repos.map(function(e){return e.slug.split("/")[1]}),data:t}})}function n(){return r().then(function(t){var r=t.data.repos.filter(function(e){return null!==e.last_build_number});return r.map(function(t){var r=t.slug,n=r.split("/")[1],a=parseInt(t.last_build_number,10),u=[0,1,2,3,4,5,6,7,8,9,10].map(function(e){return a-e}).filter(function(e){return e>=0});return{name:n,url:e+"/repos/"+r,html_url:p+"/"+r,builds_url:e+"/repos/"+r+"/builds{?number,after_number}",builds:u,data:t}})})}function a(t){return Promise.all(t.builds.map(function(e){var r=_urlTemplate2["default"].parse(t.builds_url),n=r.expand({number:e});return(0,_fetch2["default"])(n,d).then(function(e){return e.json()})})).then(function(r){var n=[].concat.apply([],r.map(function(e){return e.builds}));return n.map(function(r){var n=TRAVIS_STATE_MAP[r.state]===_adapter.PENDING;return{name:t.name,number:parseInt(r.number,10),url:e+"/repos/"+s+"/"+t.name+"/builds/"+r.id,html_url:p+"/"+s+"/"+t.name+"/builds/"+r.id,state:TRAVIS_STATE_MAP[r.state],start:new Date(r.started_at),end:n?null:new Date(r.finished_at),data:r}})})}var u=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],i=u.headers,l=u.github_token,s=u.account,o=Object.assign({Accept:TRAVIS_MEDIA_TYPE},i),d={headers:o},p=getHtmlUrl(e);return{getInfo:r,getBuilders:n,getBuilds:a}}Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]=Travis;var _fetch=require("./fetch"),_fetch2=_interopRequireDefault(_fetch),_urlTemplate=require("url-template"),_urlTemplate2=_interopRequireDefault(_urlTemplate),_adapter=require("./adapter"),TRAVIS_MEDIA_TYPE="application/vnd.travis-ci.2+json",TRAVIS_HTML_URL=/^(https?:\/\/)(api\.(travis-ci\.(org|com))|([^\/]+)\/api)(\/.+)?$/,TRAVIS_STATE_MAP={received:_adapter.PENDING,created:_adapter.PENDING,queued:_adapter.PENDING,started:_adapter.PENDING,passed:_adapter.SUCCESS,failed:_adapter.FAILURE,errored:_adapter.ERRORED,canceled:_adapter.ABORTED};

},{"./adapter":1,"./fetch":3,"url-template":"url-template"}],7:[function(require,module,exports){

},{}]},{},[4])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
